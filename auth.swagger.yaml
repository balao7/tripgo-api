swagger: '2.0'
info:
  description: '<h1>SatAppServer</h1>'
  version: 1.0.2014.01.03-SNAPSHOT
  title: SatAppServer
tags:
  - name: Auth
    description: ''
paths:
  '/{region}':
    get:
      tags:
        - Auth
      description: >-
        Endpoint to get the available providers for a specific region, with the
        information to signin/logout, depending

        on the status of the user
      operationId: resource_AuthServiceImpl_getModesForRegion_GET
      produces:
        - application/json
      parameters:
        - name: X-TripGo-RegionEligibility
          in: header
          type: string
          description: app eligibility
        - name: userToken
          in: header
          type: string
          description: user ID
        - name: region
          in: path
          type: string
          required: true
          description: region to look for providers
      responses:
        200:
          schema:
            description: ''
            type: array
            items:
              $ref: '#/definitions/AuthData'
          headers: {}
          description: Success
        default:
          description: Unexpected error.
  '/{provider}/signin':
    get:
      tags:
        - Auth
      description: Endpoint to start the signup/login flow for the user to the given provider
      operationId: resource_AuthServiceImpl_signIn_GET
      produces:
        - application/json
      parameters:
        - name: X-TripGo-RegionEligibility
          in: header
          default: ''
          type: string
          description: app eligibility
        - name: userToken
          in: header
          type: string
          description: user ID
        - name: provider
          in: path
          type: string
          required: true
          description: code
      responses:
        200:
          schema:
            $ref: '#/definitions/BookingForm'
          headers: {}
          description: Success
        default:
          description: Unexpected error.
  '/signin/{instanceID}':
    post:
      tags:
        - Auth
      description: Endpoint to post data for the signup/login flow for the user
      operationId: resource_AuthServiceImpl_signIn_POST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: instanceID
          in: path
          type: string
          required: true
          description: id identifying the signup/login flow
        - name: body
          in: body
          schema:
            $ref: '#/definitions/BookingFormData'
          description: sent from the client to be processed by the backend
      responses:
        201:
          schema:
            $ref: '#/definitions/BookingForm'
          headers: {}
          description: Success
        default:
          description: Unexpected error.
  '/{provider}/logout':
    get:
      tags:
        - Auth
      description: Endpoint to remove the data saved for the user to the given provider
      operationId: resource_AuthServiceImpl_logOut_GET
      produces:
        - application/json
      parameters:
        - name: X-TripGo-RegionEligibility
          in: header
          default: ''
          type: string
          description: app eligibility
        - name: userToken
          in: header
          type: string
          description: user ID
        - name: provider
          in: path
          type: string
          required: true
          description: code
      responses:
        200:
          schema:
            description: ''
            type: boolean
          headers: {}
          description: Success
        default:
          description: Unexpected error.

definitions:
  AuthData:
    properties:
      action:
        description: available action (signin / logout)
        type: string
      provider:
        description: "Provider code (like, 'uber', 'lyft', etc)"
        type: string
      status:
        description: Status of the user (Not Setup / Logged in)
        type: string
      url:
        description: endpoint to start the action
        type: string
      description: 'This class contains information about a specific provider, the status of the current user and the possible action'

  BookingAction:
    properties:
      URL:  
        description: 'the url to post to, after the user hits on the action button'
        type: string
      enabled:
        description: 'when present, indicates whether the action button should be enabled to be clicked by the user or not'
        type: boolean
      finalStep:
        description: Indicates whether going to the next step will actually do the booking
        type: boolean
      hudText:
        description: "indicates what's the server going to do after the action fired."
        type: string
      title:
        description: the title or text to show in the button
        type: string
    description: >-
      This class contains information about the main action button to shown on
      screen: <br>

      - the title or text to show in the button. <br>

      - the url to post to, after the user hits on the action button. <br>

      - the enabled field, when present, indicates whether the action button
      should be enabled to be clicked by the user or not<br>

      - the hudText field, indicates what's the server going to do after the
      action fired.<br><br>

      if the url is null or missing, it means that there is no other option and
      the user needs to be redirected back to the trip

  BookingForm:
    allOf:
      - $ref: '#/definitions/FormField'
      - properties:
          action:
            $ref: '#/definitions/BookingAction'
          form:
            description: The list of FormGroups to show in the form.
            type: array
            items:
              $ref: '#/definitions/FormGroup'
          image:
            description: 'a URL of an image to show, whenever available'
            type: string
          value:
            description: ''
            type: string
    description: >-
      Generic data to generate input fields on booking screen.  <br>

      The data will be grouped in FormGroup objects, each will include a list of
      FormFields. <br>

      This will also have an 'action' field, which is related to the main action
      to show in the screen. <br>

      see <a href='./bookingAction.html'>BookingAction</a> <br>

  BookingFormData:
    properties:
      input:
        description: ''
        type: array
        items:
          $ref: '#/definitions/FormField'
    description: ''

  FormField:
    properties:
      hidden:
        description: 'determines whether this field needs to be hidden to the user (and in that case, must be sent to the server)'
        type: boolean
      id:
        description: the id to identify the field
        type: string
      readOnly:
        description: determines whether this field is only to show information to the user and does not need to be sent to the server
        type: boolean
      required:
        description: determines whether this field must be sent back to the server or not
        type: boolean
      sidetitle:
        description: 'a sidetitle to show aligned to the right, at the same level of the title (may be missing)'
        type: string
      subtitle:
        description: the subtitle to show under the title (may be missing)
        type: string
      title:
        description: the title to show to the user (may be null missing)
        type: string
    description: |-
      Form field is an abstract class that represents a generif field. <br>
      Current possible instances include: <br>
      <a href='./addressFormField.html'>AddressFormField</a> <br>
      <a href='./dateTimeFormField.html'>DateTimeFormField</a> <br>
      <a href='./stepperFormField.html'>StepperFormField</a> <br>
      <a href='./stringFormField.html'>StringFormField</a> <br>
      <a href='./timeFormField.html'>TimeFormField</a> <br>
      <a href='./passwordFormField.html'>PasswordFormField</a> <br>
      <a href='./linkFormField.html'>LinkFormField</a> <br>
      <a href='./bookingForm.html'>BookingForm</a> <br>
      <a href='./statusForm.html'>StatusForm</a> <br>
      <a href='./paymentForm.html'>PaymentForm</a> <br>
      <a href='./textFormField.html'>TextFormField</a> <br>
      <a href='./switchFormField.html'>SwitchFormField</a> <br>
      <a href='./optionFormField.html'>OptionFormField</a> <br>

  FormGroup:
    properties:
      fields:
        description: ''
        type: array
        items:
          $ref: '#/definitions/FormField'
      footer:
        description: ''
        type: string
      title:
        description: ''
        type: string
    description: '' 
